name: Release and Update Homebrew

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: bib
  HOMEBREW_TAP_REPO: antonio-leitao/homebrew-taps

jobs:
  build-and-release:
    name: Build for ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: bib-x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: bib-aarch64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: bib-x86_64-linux

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build Release Binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Create tarball
        run: |
          mkdir -p dist/${{ env.PROJECT_NAME }}

          # Copy binary
          cp target/${{ matrix.target }}/release/${{ env.PROJECT_NAME }} dist/${{ env.PROJECT_NAME }}/

          # Copy completion files (they should already exist in the repo)
          cp -r completions dist/${{ env.PROJECT_NAME }}/

          # Copy documentation
          [ -f README.md ] && cp README.md dist/${{ env.PROJECT_NAME }}/
          [ -f LICENSE ] && cp LICENSE dist/${{ env.PROJECT_NAME }}/
          [ -f CHANGELOG.md ] && cp CHANGELOG.md dist/${{ env.PROJECT_NAME }}/

          # Create tarball
          cd dist
          tar -czf ${{ matrix.asset_name }}.tar.gz ${{ env.PROJECT_NAME }}

          # Calculate SHA256
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sha256sum ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256
          else
            shasum -a 256 ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: |
            dist/${{ matrix.asset_name }}.tar.gz
            dist/${{ matrix.asset_name }}.tar.gz.sha256

  create-release:
    name: Create GitHub Release
    needs: build-and-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}

    permissions:
      contents: write # Allows the default token to create releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            artifacts/bib-x86_64-apple-darwin/*.tar.gz
            artifacts/bib-aarch64-apple-darwin/*.tar.gz
            artifacts/bib-x86_64-linux/*.tar.gz
          body: |
            # Bib ${{ github.ref_name }}

            Academic paper manager with automatic BibTeX extraction and fuzzy search.

            ## Installation

            ### Homebrew (macOS/Linux)
            ```bash
            brew install yourusername/taps/bib
            ```

            ### Direct Download
            Download the appropriate binary for your system from the assets below.

            ## Features
            - 📚 Smart paper import from arXiv, URLs, or local PDFs
            - 🤖 Automatic BibTeX extraction using AI
            - 🔍 Fuzzy search with shell completions
            - 📦 SQLite storage with deduplication

            ## Changes
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.

  update-homebrew-tap:
    name: Update Homebrew Tap
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Calculate SHA256 checksums
        id: checksums
        run: |
          SHA_DARWIN_X86=$(cat artifacts/bib-x86_64-apple-darwin/bib-x86_64-apple-darwin.tar.gz.sha256 | awk '{print $1}')
          SHA_DARWIN_ARM=$(cat artifacts/bib-aarch64-apple-darwin/bib-aarch64-apple-darwin.tar.gz.sha256 | awk '{print $1}')
          SHA_LINUX_X86=$(cat artifacts/bib-x86_64-linux/bib-x86_64-linux.tar.gz.sha256 | awk '{print $1}')

          echo "sha_darwin_x86=$SHA_DARWIN_X86" >> $GITHUB_OUTPUT
          echo "sha_darwin_arm=$SHA_DARWIN_ARM" >> $GITHUB_OUTPUT
          echo "sha_linux_x86=$SHA_LINUX_X86" >> $GITHUB_OUTPUT

      - name: Generate Homebrew Formula
        run: |
          VERSION=${{ needs.create-release.outputs.version }}
          SHA_DARWIN_X86=${{ steps.checksums.outputs.sha_darwin_x86 }}
          SHA_DARWIN_ARM=${{ steps.checksums.outputs.sha_darwin_arm }}
          SHA_LINUX_X86=${{ steps.checksums.outputs.sha_linux_x86 }}

          cat > bib.rb << 'EOF'
          class Bib < Formula
            desc "Academic paper manager with automatic BibTeX extraction and fuzzy search"
            homepage "https://github.com/${{ github.repository }}"
            version "${VERSION}"
            license "MIT"

            on_macos do
              if Hardware::CPU.intel?
                url "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/bib-x86_64-apple-darwin.tar.gz"
                sha256 "${SHA_DARWIN_X86}"
              elsif Hardware::CPU.arm?
                url "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/bib-aarch64-apple-darwin.tar.gz"
                sha256 "${SHA_DARWIN_ARM}"
              end
            end

            on_linux do
              if Hardware::CPU.intel?
                url "https://github.com/${{ github.repository }}/releases/download/v${VERSION}/bib-x86_64-linux.tar.gz"
                sha256 "${SHA_LINUX_X86}"
              end
            end

            def install
              # Install binary
              bin.install "bib"
              
              # Install completions - Homebrew handles the rest automatically
              bash_completion.install "completions/bib.bash" => "bib"
              zsh_completion.install "completions/_bib" => "_bib"
              fish_completion.install "completions/bib.fish" => "bib.fish"
              
              # Install docs
              doc.install "README.md" if File.exist?("README.md")
              doc.install "CHANGELOG.md" if File.exist?("CHANGELOG.md")
            end

            def post_install
              # Create config directory for database
              (var/"bib").mkpath
            end

            test do
              # Test that the binary runs
              assert_match "bib", shell_output("#{bin}/bib --version")
              
              # Test stats command (works even with empty database)
              assert_match "Total papers", shell_output("#{bin}/bib stats")
            end
          end
          EOF

          # Variable substitution for the formula
          sed -i "s/\${VERSION}/${VERSION}/g" bib.rb
          sed -i "s/\${SHA_DARWIN_X86}/${SHA_DARWIN_X86}/g" bib.rb
          sed -i "s/\${SHA_DARWIN_ARM}/${SHA_DARWIN_ARM}/g" bib.rb
          sed -i "s/\${SHA_LINUX_X86}/${SHA_LINUX_X86}/g" bib.rb

      - name: Checkout Homebrew Taps Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.HOMEBREW_TAP_REPO }}
          token: ${{ secrets.HOMEBREW_RELEASE_TOKEN }}
          path: homebrew-taps

      - name: Update Formula in Taps Repository
        run: |
          mkdir -p homebrew-taps/Formula
          cp bib.rb homebrew-taps/Formula/

          cd homebrew-taps
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/bib.rb
          git commit -m "Update bib to version ${{ needs.create-release.outputs.version }}" || echo "No changes to commit"
          git push
