#compdef bib

_bib() {
    local curcontext="$curcontext" state line
    typeset -A opt_args

    _arguments -C \
        '1: :->command' \
        '*:: :->args'

    case $state in
        command)
            local commands=(
                'add:Add new reference from URL or PDF'
                'search:Search papers using fuzzy matching'
                'list:List all papers in the database'
                'stats:Show database statistics'
            )
            _describe 'command' commands
            ;;
        args)
            case $line[1] in
                add)
                    # For the 'add' command, we just complete files.
                    _files
                    ;;
                search)
                    # _arguments handles parsing flags like --author.
                    # The final *: part says "for any remaining word,
                    # call the _bib_complete_search function".
                    _arguments \
                        '(-a --author)'{-a,--author}'[Search by author instead of title]' \
                        '(-n --limit)'{-n,--limit}'[Maximum results]:limit:((5 10 20 50 100))' \
                        '(-h --help)'{-h,--help}'[Show help]' \
                        '*:query:_bib_complete_search'
                    ;;
                list)
                    _arguments \
                        '(-l --limit)'{-l,--limit}'[Maximum papers to display]:limit:((5 10 20 50 100))' \
                        '(-h --help)'{-h,--help}'[Show help]'
                    ;;
                stats)
                    _arguments '(-h --help)'{-h,--help}'[Show help]'
                    ;;
            esac
            ;;
    esac
}

# This helper is now much simpler.
_bib_complete_search() {
    local context="search-title"
    # Check if --author is present anywhere on the line before the cursor.
    if (( ${words[(I)--author]} )) || (( ${words[(I)-a]} )); then
        context="search-author"
    fi

    # _wanted is the key. It tells Zsh: "Run this command to get results.
    # The command is responsible for filtering. Don't re-filter them."
    # $PREFIX is the word being completed (e.g., "zation").
    # The output from `bib --complete` is expected to be `value:description`.
    _wanted papers 'papers' bib --complete "$PREFIX" --complete-context "$context"
}

_bib "$@"
